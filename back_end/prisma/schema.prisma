generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int          @id @default(autoincrement())
  name          String
  description   String
  price         Float
  images        Image[]
  type          Type         @relation(fields: [typeId], references: [id])
  category      Category     @relation(fields: [categoryId], references: [id])
  brand         Brand        @relation(fields: [brandId], references: [id])
  material      Material?    @relation(fields: [materialId], references: [id])
  style         Style?       @relation(fields: [styleId], references: [id])
  season        Season?      @relation(fields: [seasonId], references: [id])
  sex           Sex
  size          Size[]
  color         Color[]
  typeId        Int
  categoryId    Int
  brandId       Int
  materialId    Int?
  styleId       Int?
  seasonId      Int?
  createdAt     DateTime     @default(now())
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?
}

model Type {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String
  image      String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  products   Product[]
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  images        String[]
  subCategories SubCategory[]
  products      Product[]
  createdAt     DateTime      @default(now())
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model Size {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model Color {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  images    Image[]
  createdAt DateTime  @default(now())
}

model Material {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model Style {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model Season {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Image {
  color     Color    @relation(fields: [colorId], references: [id])
  url       String   @unique
  colorId   Int
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

enum Sex {
  MALE
  FEMALE
}
